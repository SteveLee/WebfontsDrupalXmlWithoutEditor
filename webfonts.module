<?php
// $Id$

/****
Copyright 2010 Monotype Imaging Inc.  
This program is distributed under the terms of the GNU General Public License
****/

include_once('admin/includes.php');
include_once ('admin/wfsapi.class.php'); 
/**
 * Implementation of hook_perm().
 */
function webfonts_perm() {
  return array('administer webfonts');
}


/**
* Implementation of hook_menu()
*/
function webfonts_menu(){

	 // Admin menu.
	$items['admin/settings/webfonts']=array(
	'title' => 'Fonts.com Webfonts',
	'description' => 'Use web font service in your drupal environment',
	'page callback' => 'drupal_get_form', 
    'page arguments' => array('webfonts_admin_settings'),
    'access arguments' => array('administer webfonts'),
    'file' => 'admin/webfonts.admin.inc',
	 'type' => MENU_NORMAL_ITEM
  );
	//Project listing page menu
	$items['admin/settings/webfonts/projectlist']=array(	
	'title' => 'Projects Listing',	
	'description' => 'Page to add / remove / activate / deactivate projects in Webfonts service',
	'page callback' => 'drupal_get_form',
    'page arguments' => array('webfonts_admin_config'),
    'access arguments' => array('administer webfonts'),
    'file' => 'admin/webfonts.admin.inc',
    'type' => MENU_CALLBACK
	);
	
	// Project listing from ajax.
	$items['admin/settings/webfonts/projects']=array(
	'page callback' => 'webfonts_project_list', 
    'access callback' => TRUE,
    'file' => 'admin/webfonts.admin.inc',
    'type' => MENU_CALLBACK
	);
	//Adding existing drupal selectors menu
	$items['admin/settings/webfonts/extSelect/%/%']=array(
	'description' => 'this page adds a selector webfonts current project',
	'page callback' => 'webfonts_extSelect',
    'page arguments' => array(4,5),
    'access arguments' => array('administer webfonts'),
    'file' => 'admin/webfonts.admin.inc',
    'type' => MENU_CALLBACK
	);

	// Updating the projects details to drupal database.
	$items['admin/settings/webfonts/update']=array(
	'page callback' => 'drupal_get_form', 
    'page arguments' => array('webfonts_project_status_update'),
    'access arguments' => array('administer webfonts'),
    'file' => 'admin/webfonts.admin.inc',
    'type' => MENU_CALLBACK
	);
	
	//Projects details page
	$items['admin/settings/webfonts/projectdetails/%'] = array(
     'title' => 'Projects Detail',
      'page callback' => 'webfonts_page',
	  'page arguments' => array(4),
      'type' => MENU_CALLBACK,
      'file' => 'admin/webfonts.admin.inc',
	   'access arguments' => array('administer webfonts'),
    );

	//Ajax based editor checking functions menu
	 $items['admin/settings/webfonts/ajaxeditor'] = array(
    'page callback' => 'webfonts_editor_status_ajax',
    'type' => MENU_CALLBACK,
	 'file' => 'admin/webfonts.admin.inc',
    'access arguments' => array('administer webfonts'),
  	);
	//selectors deleting menu
	$items['admin/settings/webfonts/selectorsdelete/%/%/%'] = array(
      'page callback' => 'drupal_get_form',
	  'page arguments' => array('webfonts_selectors_delete',4,5,6),
	  'type' => MENU_CALLBACK,
      'file' => 'admin/webfonts.admin.inc',
	  'weight' => 3,
      'access arguments' => array('administer webfonts'),
    );

	// Selectors adding from ajax 
	$items['admin/settings/webfonts/addselectors/%/%']=array(
	'page callback' => 'webfonts_selectors_list', 
	'page arguments' => array(4,5),
    'access callback' => TRUE,
    'file' => 'admin/webfonts.admin.inc',
    'type' => MENU_CALLBACK
	);
	
	// Domain adding from ajax .
	$items['admin/settings/webfonts/adddomains/%/%']=array(
	'page callback' => 'webfonts_domains_list', 
	'page arguments' => array(4,5),
    'access callback' => TRUE,
    'file' => 'admin/webfonts.admin.inc',
    'type' => MENU_CALLBACK
	);
	
	//Domain deleting menu
	$items['admin/settings/webfonts/domaindelete/%/%/%'] = array(
      'page callback' => 'drupal_get_form',
	  'page arguments' => array('webfonts_domains_delete',4,5,6),
	  'type' => MENU_CALLBACK,
      'file' => 'admin/webfonts.admin.inc',
	  'weight' => 3,
      'access arguments' => array('administer webfonts'),
    );
	
	/* Editing domain*/
	$items['admin/settings/webfonts/domainedit/%/%/%'] = array(
	  'title' => 'Edit domain name',
      'page callback' => 'drupal_get_form',
	  'page arguments' => array('webfonts_domains_edit',4,5,6),
	  'type' => MENU_CALLBACK,
      'file' => 'admin/webfonts.admin.inc',
      'access arguments' => array('administer webfonts'),
    );
	
	/****** Commented to disable the editor option - By Keshant ******/
	
	/*$items['admin/settings/webfonts/font'] = array(
	  'page arguments' => array('webfonts_font_fetch'),
	  'type' => MENU_CALLBACK,
	   'access arguments' => array('administer webfonts'),
    );*/
	
	$items['admin/settings/webfonts/domains/%'] = array(
	'page callback' => 'webfonts_domains_list_pagination',
	 'page arguments' => array(4),
    'access callback' => TRUE,
    'file' => 'admin/webfonts.admin.inc',
    'type' => MENU_CALLBACK
    );
	
	$items['admin/settings/webfonts/fontslists/%'] = array(
	'page callback' => 'font_list_pagination',
	 'page arguments' => array(4),
    'access callback' => TRUE,
    'file' => 'admin/webfonts.admin.inc',
    'type' => MENU_CALLBACK
    );
	
	$items['admin/settings/webfonts/selectors_list/%'] = array(
	'page callback' => 'webfonts_selectors_list_pagination',
	 'page arguments' => array(4),
    'access callback' => TRUE,
    'file' => 'admin/webfonts.admin.inc',
    'type' => MENU_CALLBACK
    );
	
	return $items;
}


/**
 * Implementation of hook_init().
 */
function webfonts_init() {
	$path = drupal_get_path('module', 'webfonts');
	drupal_add_js($path . '/webfonts.js', 'header');
	$wfs_arr =  webfonts_get_key();
	$key = $wfs_arr[0];
	$visibility = $wfs_arr[1];
	$visibility_pages = $wfs_arr[2];
	drupal_set_html_head('<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />');
  	$path = drupal_get_path_alias($_GET['q']);
  	// Match path if necessary (taken from block module)
	$page_match=pageMatch($visibility_pages,$visibility,$path);
 	preg_match("/projectdetails/",$path,$matches, PREG_OFFSET_CAPTURE);	
	if (!empty($key) &&   ($matches[0][0] == "projectdetails" ||  $page_match)) {
	
	if($wfs_arr[3] == 0){
	 /*$variables['wfs_script'] = '<script defer="defer" type="text/javascript" src="'.FFJSAPIURI.$key.'.js"></script>';*/
	drupal_set_html_head('<script type="text/javascript" src="'.FFJSAPIURI.$key.'.js"></script>'); 

	  }
	  else if($wfs_arr[3] != 0){
		drupal_add_js('$("head").append("<link href=\"'.FASTFONTURI.$key.'.css\" rel=\"stylesheet\" type=\"text/css\" />");','inline');
	  }
  }
/*	if (!empty($key) && $page_match) {
    // Include the Wfs code
	 if($wfs_arr[3] == 0){
	 drupal_set_html_head('<script defer="defer" type="text/javascript" src="'.FFJSAPIURI.$key.'.js"></script>'); 
	 }else if($wfs_arr[3] != 0){
		drupal_add_js('$("head").append("<link href=\"'.FFCSSHDLRURI.$key.'\" rel=\"stylesheet\" type=\"text/css\" />");','inline');
	  }

	}*/

$path = drupal_get_path_alias($_GET['q']);	
preg_match("/projectdetails/",$path,$matches, PREG_OFFSET_CAPTURE);		

/****** Commented to disable the editor option - By Keshant ******/

/*
if($wfs_arr[4] == 1 || $matches[0][0] == "projectdetails"){
	$wfs_details=getUnPass();
	$browser = browserName();
	//Fetching the xml data from WFS
	$apiurl = "xml/Fonts/?wfspid=".$key;
	$wfs_api = new Services_WFS($wfs_details[1],$wfs_details[2],$apiurl);
	$xmlMsg = $wfs_api->wfs_getInfo_post();
	//Creating xml DOM Instance
	$xmlDomObj = new DOMDocument();
	$xmlDomObj->loadXML($xmlMsg);
	$fonts = $xmlDomObj->getElementsByTagName( "Font" );
	$webfonts=array();
	$fontsList="";
	$fontsListTM="";
	$stylesheetcss="";
	foreach($fonts as $font){
		
		$FontNames = $font->getElementsByTagName("FontName");
		$FontName= $FontNames->item(0)->nodeValue;
		
		$FontCSSNames = $font->getElementsByTagName("FontCSSName");
		$FontCSSName= $FontCSSNames->item(0)->nodeValue;
		
		$CDNKeys = $font->getElementsByTagName("CDNKey");
		$CDNKey= $CDNKeys->item(0)->nodeValue;
		if($browser =="Internet Explorer (MSIE/Compatible)")
		{
			$TTFs = $font->getElementsByTagName("EOT");
		$TTF= $TTFs->item(0)->nodeValue;
		$ext=".eot";
		}
		else{
		$TTFs = $font->getElementsByTagName("TTF");
		$TTF= $TTFs->item(0)->nodeValue;
		$ext=".ttf";
		}
		
		$fontsList.= "\"".$FontName."/".$FontCSSName.";\" + ";
		$stylesheetcss.="@font-face{font-family:'".$FontCSSName."';src:url('".FONTFCURI.$TTF.$ext."?".$CDNKey."&projectId=".$key."');}";
		$fontsListTM.= $FontName.'='.$FontCSSName.'; '; 
			}

	drupal_add_js("
	if(typeof( CKEDITOR ) != 'undefined'){
				CKEDITOR.config.font_names =".$fontsList."CKEDITOR.config.font_names;
				CKEDITOR.config.contentsCss = '?q=admin/settings/webfonts/font',
				CKEDITOR.on( 'instanceReady', function(e ){
						addStyle();
						return true;
		 		});
 				}",'inline');
				
	}



if($wfs_arr[4] == 1 || $matches[0][0] == "projectdetails"){
	$path = drupal_get_path('module', 'webfonts');
	$default_font = "Andale Mono=andale mono,times;"."Arial=arial,helvetica,sans-serif;".
		"Arial Black=arial black,avant garde;".
		"Book Antiqua=book antiqua,palatino;".
		"Comic Sans MS=comic sans ms,sans-serif;".
		"Courier New=courier new,courier;".
		"Georgia=georgia,palatino;".
		"Helvetica=helvetica;".
		"Impact=impact,chicago;".
		"Symbol=symbol;".
		"Tahoma=tahoma,arial,helvetica,sans-serif;".
		"Terminal=terminal,monaco;".
		"Times New Roman=times new roman,times;".
		"Trebuchet MS=trebuchet ms,geneva;".
		"Verdana=verdana,geneva;".
		"Webdings=webdings;".
		"Wingdings=wingdings,zapf dingbats";
	if( $matches[0][0] == "projectdetails"){
		
			drupal_add_js($path . '/tinymce/jscripts/tiny_mce/tiny_mce.js', 'header');
			drupal_add_js("tinyMCE.init({
			mode : \"exact\",
			elements : \"tinymce_sample,body,comment\",
			
			theme : \"advanced\",
			theme_advanced_toolbar_location : \"top\",
			theme_advanced_buttons1 : \"bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,fontselect,fontsizeselect\",
			theme_advanced_buttons2 : \"cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor\",
			theme_advanced_fonts : '".$fontsListTM."".$default_font."',  
									
			content_css : \"?q=admin/settings/webfonts/font\"
			
			});
			",'inline');
			drupal_add_js($path . '/ckeditor/ckeditor.js', 'header');
			drupal_add_js("$(document).ready(function() {if(document.getElementById('edit-body')){CKEDITOR.replace('edit-body');}
			if(document.getElementById('edit-comment')){CKEDITOR.replace('edit-comment');}});",'inline');
		} else	if($wfs_arr[5] == 0){
			drupal_add_js($path . '/tinymce/jscripts/tiny_mce/tiny_mce.js', 'header');
			drupal_add_js("tinyMCE.init({
				mode : \"exact\",
				elements : \"tinymce_sample,body,comment\",
			
				theme : \"advanced\",
				theme_advanced_toolbar_location : \"top\",
				theme_advanced_buttons1 : \"bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,fontselect,fontsizeselect\",
				theme_advanced_buttons2 : \"cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor\",
				theme_advanced_fonts : '".$fontsListTM."".$default_font."', 
										
				content_css : \"?q=admin/settings/webfonts/font\"
			
			});
			",'inline');
	}else if($wfs_arr[5] == 1){
			drupal_add_js($path . '/ckeditor/ckeditor.js', 'header');
			drupal_add_js("$(document).ready(function() {if(document.getElementById('edit-body')){CKEDITOR.replace('edit-body');}
			if(document.getElementById('edit-comment')){CKEDITOR.replace('edit-comment');}});",'inline');
		}
		else{
		
		}
	}
*/

}

/* 
*getting the project key based upon their data
*/
function webfonts_get_key() 
{	
	$project = array();
	$webfonts_id = explode("projectdetails/",$_GET['q']);
	if(!empty($webfonts_id[1])){
		$sql = "SELECT project_key,project_page_option,project_options,project_pages, wysiwyg_enabled,editor_select FROM `".TBLCONFIG."` where `wfs_configure_id` = '%d' order by updated_date";
$result = db_query_range(db_rewrite_sql($sql),$webfonts_id[1], 0,  1);
	while ($data = db_fetch_object($result)) {
			
			$project[]=$data->project_key;
			$project[]=$data->project_page_option;
			$project[]=$data->project_pages;
			$project[]=$data->project_options;
			$project[]=$data->wysiwyg_enabled ;
			$project[]=$data->editor_select;
			}
	}
	else{
	$webfonts_userid = variable_get('webfonts_userid','');
	$sql = "SELECT project_key,project_page_option,project_options,project_pages,project_day,wysiwyg_enabled,editor_select  FROM `".TBLCONFIG."` where `is_active` = '1' and `user_id` = '%d' ORDER BY updated_date DESC";
	$result = db_query($sql,$webfonts_userid);
	while ($data = db_fetch_object($result)) {
			$dayValue = $data->project_day;
			if(checkday($dayValue)){
			$project[]=$data->project_key;
			$project[]=$data->project_page_option;
			$project[]=$data->project_pages;
			$project[]=$data->project_options;
			$project[]=$data->wysiwyg_enabled;
			$project[]=$data->editor_select;
			break;
			}
		}
	
	}
	
	return $project;
}

/****** Commented to disable the editor option - By Keshant ******/

/*
font face css making function 
*/
/*function webfonts_font_fetch(){
header("content-type: text/css");	
$wfs_details=getUnPass();

$wfs_arr =  webfonts_get_key();
$key = $wfs_arr[0];
$browser = browserName();
//fetching xml data
$apiurl = "xml/Fonts/?wfspid=".$key;
$wfs_api = new Services_WFS($wfs_details[1],$wfs_details[2],$apiurl);
$xmlMsg = $wfs_api->wfs_getInfo_post();
//Creating JSON Instance
	$fontdata = new DOMDocument();
	$fontdata->loadXML($xmlMsg);
	$fonts = $fontdata->getElementsByTagName( "Font" );
	$webfonts=array();
	$fontsList="";
	$stylesheetcss="";
	foreach($fonts as $font){
		
		$FontNames = $font->getElementsByTagName("FontName");
		$FontName= $FontNames->item(0)->nodeValue;
		
		$FontCSSNames = $font->getElementsByTagName("FontCSSName");
		$FontCSSName= $FontCSSNames->item(0)->nodeValue;
		
		$CDNKeys = $font->getElementsByTagName("CDNKey");
		$CDNKey= $CDNKeys->item(0)->nodeValue;
		if($browser =="Internet Explorer (MSIE/Compatible)")
		{
		$TTFs = $font->getElementsByTagName("EOT");
		$TTF= $TTFs->item(0)->nodeValue;
		$ext=".eot";
		}else{
		$TTFs = $font->getElementsByTagName("TTF");
		$TTF= $TTFs->item(0)->nodeValue;
		$ext=".ttf";
		}
		
		$fontsList.= "\"".$FontName."/'".$FontCSSName."';\" + ";
		$stylesheetcss.="@font-face{font-family:'".$FontCSSName."';src:url('http://fast.fonts.com/d/".$TTF.$ext."?".$CDNKey."&projectId=".$key."');}";
			}
	print $stylesheetcss;
die();
	}*/